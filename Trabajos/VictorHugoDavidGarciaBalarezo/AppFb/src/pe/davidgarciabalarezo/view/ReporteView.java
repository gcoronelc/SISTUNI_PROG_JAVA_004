/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pe.davidgarciabalarezo.view;

import com.restfb.Connection;
import com.restfb.DefaultFacebookClient;
import com.restfb.FacebookClient;
import com.restfb.Parameter;
import com.restfb.json.JsonObject;
import com.restfb.types.Post;
import com.restfb.types.User;
import static com.restfb.util.StringUtils.toInteger;
import static com.sun.xml.internal.fastinfoset.alphabet.BuiltInRestrictedAlphabets.table;
import java.lang.reflect.Array;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Computer Owner
 */
public class ReporteView extends javax.swing.JInternalFrame {

    /**
     * Creates new form ReporteView
     */
   
    DefaultTableModel model ;
    
    public ReporteView() {
        initComponents();
        model = (DefaultTableModel)jtPost.getModel();
        llenarCombo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jtPost = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtNroPost = new javax.swing.JTextField();
        btnOrderFecha = new javax.swing.JButton();
        cobOrdenar = new javax.swing.JComboBox<>();

        setClosable(true);
        setForeground(new java.awt.Color(102, 153, 255));
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Mis Post");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        jtPost.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Post", "Story", "Url fb", "Fecha", "Nro Likes", "Likes"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Long.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jtPost.setColumnSelectionAllowed(true);
        jtPost.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtPostMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtPost);
        jtPost.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        if (jtPost.getColumnModel().getColumnCount() > 0) {
            jtPost.getColumnModel().getColumn(0).setPreferredWidth(200);
            jtPost.getColumnModel().getColumn(1).setPreferredWidth(200);
            jtPost.getColumnModel().getColumn(2).setPreferredWidth(200);
            jtPost.getColumnModel().getColumn(3).setPreferredWidth(100);
            jtPost.getColumnModel().getColumn(5).setPreferredWidth(200);
        }

        jButton1.setText("Mostrar Posts");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("#Post a mostrar:");

        txtNroPost.setText("10");

        btnOrderFecha.setText("Order por Fecha");
        btnOrderFecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrderFechaActionPerformed(evt);
            }
        });

        cobOrdenar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 836, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNroPost, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1)
                        .addGap(65, 65, 65)
                        .addComponent(cobOrdenar, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnOrderFecha)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton1)
                        .addComponent(txtNroPost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnOrderFecha)
                        .addComponent(cobOrdenar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 441, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
    jtPost.getPreferredSize();
       
    }//GEN-LAST:event_formInternalFrameOpened

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
 
        //Mostrar post
        Integer nro=0;      
        nro = toInteger(txtNroPost.getText());
       
        String atoken = AccesoView.txtAccessToken.getText();
        FacebookClient facebookClient = new DefaultFacebookClient(atoken);
        User users = facebookClient.fetchObject("me", User.class);   
          
       Connection<Post> result = facebookClient.fetchConnection("me/feed", Post.class) ;
       String mipost=" ";
       String mistory=" ";
       String miurl=" ";
       String mifecha=" ";
       String milikes="0";

       Integer contador=0;
       for (List<Post> page : result){
           for(Post aPost : page){
               contador +=1;
               
               System.out.println("Mensaje: "+aPost.getMessage() );
               System.out.println("URL FB : "+"https://www.facebook.com/"+aPost.getId() );
               System.out.println("Story  : "+aPost.getStory() );
               System.out.println("Fecha  : "+aPost.getCreatedTime() );
               System.out.println("Likes  : "+aPost.getLikes());
               
               mipost = aPost.getMessage();
               mistory=aPost.getStory();
               miurl = "https://www.facebook.com/"+aPost.getId();
              
               mifecha = aPost.getCreatedTime().toString();
                 
               if(aPost.getMessage() == null )
               {mipost = "Vacio";}
               
               if(aPost.getStory() == null)
               {mistory = "Vacio";}
               
               //if(miurl == null && miurl.isEmpty())
               //{miurl = "Vacio";}
               if(mifecha == null )
               {mifecha = "Vacio";}
               
               if(aPost.getLikes() != null  )
               {
                //milikes = "0";
                milikes = aPost.getLikes().toString();
               }
               
               //Obtener el total de likes que me dieron por post
                JsonObject jsonObject = facebookClient.fetchObject(aPost.getId()+ "/likes",
                        JsonObject.class,Parameter.with("summary", true),
                        Parameter.with("limit", 1));
                long count = jsonObject.getJsonObject("summary").getLong("total_count");
                 
             
               // milikes = Long.toString(count);
                System.out.println("count : "+count);
        
        
        
               model.insertRow(model.getRowCount(),new Object[]{mipost,mistory,miurl,mifecha,count,milikes});
               
               jtPost.setVisible(true);
               if(contador ==nro)
               { break;}
           //post/story/url/fecha/likes
           }
           if(contador ==nro)
               { break;}
           
       }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jtPostMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtPostMouseClicked
        //
        
    }//GEN-LAST:event_jtPostMouseClicked

    private void btnOrderFechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrderFechaActionPerformed
        //LLamar clase que ordena
        String tipo;
        //Datos
        tipo = cobOrdenar.getSelectedItem().toString();
        if("Fecha".equals(tipo)){
            JOptionPane.showMessageDialog(rootPane,"Ordenar","Ordenando por fecha",JOptionPane.ERROR_MESSAGE);

            
        }
    }//GEN-LAST:event_btnOrderFechaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnOrderFecha;
    private javax.swing.JComboBox<String> cobOrdenar;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jtPost;
    private javax.swing.JTextField txtNroPost;
    // End of variables declaration//GEN-END:variables

    private void llenarCombo() {
        cobOrdenar.removeAllItems();
        cobOrdenar.addItem("Fecha");
        cobOrdenar.addItem("Nro Likes");
        cobOrdenar.setSelectedIndex(-1);        
    }
}
